{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/solana-crowdfunding/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createCampaign } from \"../solana\";\nimport { Box, VStack, Button, FormControl, FormLabel, Input, FormHelperText, Textarea } from \"@chakra-ui/react\";\nimport { useWallet, useConnection } from \"@solana/wallet-adapter-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    setRoute\n  } = _ref;\n  const wallet = useWallet();\n  const {\n    connection\n  } = useConnection();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImageLink] = useState('');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await createCampaign(wallet, connection, name, description, image);\n    setName('');\n    setDescription('');\n    setImageLink('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minH: \"60vh\",\n    w: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      p: 9,\n      borderRadius: 10,\n      borderWidth: 2,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"title\",\n          children: \"Campaign Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"title\",\n          type: \"text\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"desciption\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          resize: 'none',\n          maxLength: 250,\n          id: \"description\",\n          type: \"text\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          textAlign: \"left\",\n          children: \"Tell the world what your campaign is about!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"imageLink\",\n          children: \"Image Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"image-link\",\n          type: \"text\",\n          onChange: e => setImageLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmit,\n        children: \"Publish! \\uD83D\\uDC4F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"kdxSp1MyEnBBAfXmpD7AwC866Lo=\", false, function () {\n  return [useWallet, useConnection];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/bryan/solana-crowdfunding/src/components/Form.js"],"names":["useState","createCampaign","Box","VStack","Button","FormControl","FormLabel","Input","FormHelperText","Textarea","useWallet","useConnection","Form","setRoute","wallet","connection","name","setName","description","setDescription","image","setImageLink","onSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { createCampaign } from \"../solana\";\nimport { Box, VStack, Button, FormControl, FormLabel, Input, FormHelperText, Textarea } from \"@chakra-ui/react\";\nimport { useWallet, useConnection } from \"@solana/wallet-adapter-react\";\n\nconst Form = ({setRoute}) => {\n    const wallet = useWallet();\n    const { connection } = useConnection();\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [image, setImageLink] = useState('')\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await createCampaign(wallet, connection, name, description, image);\n        setName('');\n        setDescription('');\n        setImageLink('');\n    };\n\n    return (\n        <Box minH=\"60vh\" w=\"100%\">\n            <VStack spacing={8} p={9} borderRadius={10} borderWidth={2}>\n                <FormControl isRequired>\n                    <FormLabel htmlFor='title'>Campaign Title</FormLabel>\n                    <Input id='title' type='text' onChange={(e) => setName(e.target.value)} />\n                </FormControl>\n\n                <FormControl isRequired>\n                    <FormLabel htmlFor='desciption'>Description</FormLabel>\n                    <Textarea resize={'none'} maxLength={250} id='description' type='text' onChange={(e) => setDescription(e.target.value)} />\n                    <FormHelperText textAlign=\"left\">Tell the world what your campaign is about!</FormHelperText>\n                </FormControl>\n\n                <FormControl isRequired>\n                    <FormLabel htmlFor='imageLink'>Image Link</FormLabel>\n                    <Input id='image-link' type='text' onChange={(e) => setImageLink(e.target.value)} />\n                </FormControl>\n                <Button onClick={onSubmit}>Publish! üëè</Button>\n            </VStack>\n        </Box>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}