{"ast":null,"code":"import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { BitKeepWalletAdapter } from '@solana/wallet-adapter-bitkeep';\nimport { BitpieWalletAdapter } from '@solana/wallet-adapter-bitpie';\nimport { BloctoWalletAdapter } from '@solana/wallet-adapter-blocto';\nimport { CloverWalletAdapter } from '@solana/wallet-adapter-clover';\nimport { Coin98WalletAdapter } from '@solana/wallet-adapter-coin98';\nimport { CoinhubWalletAdapter } from '@solana/wallet-adapter-coinhub';\nimport { HuobiWalletAdapter } from '@solana/wallet-adapter-huobi';\nimport { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { GlowWalletAdapter } from '@solana/wallet-adapter-glow';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SafePalWalletAdapter } from '@solana/wallet-adapter-safepal';\nimport { SlopeWalletAdapter } from '@solana/wallet-adapter-slope';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolletExtensionWalletAdapter, SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TokenPocketWalletAdapter } from '@solana/wallet-adapter-tokenpocket';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport function getWalletAdapters() {\n  let {\n    network = WalletAdapterNetwork.Mainnet\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [new PhantomWalletAdapter(), new GlowWalletAdapter(), new SlopeWalletAdapter(), new SolflareWalletAdapter({\n    network\n  }), new SolletExtensionWalletAdapter({\n    network\n  }), new BitKeepWalletAdapter(), new BitpieWalletAdapter(), new CloverWalletAdapter(), new Coin98WalletAdapter(), new CoinhubWalletAdapter(), new HuobiWalletAdapter(), new MathWalletAdapter(), new SafePalWalletAdapter(), new SolongWalletAdapter(), new TokenPocketWalletAdapter(), new TorusWalletAdapter(), new LedgerWalletAdapter(), new SolletWalletAdapter({\n    network\n  }), new BloctoWalletAdapter({\n    network\n  })];\n}","map":{"version":3,"mappings":"AAAA,SAAkBA,oBAAlB,QAA8C,6BAA9C;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,4BAAT,EAAuCC,mBAAvC,QAAkE,+BAAlE;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,wBAAT,QAAyC,oCAAzC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAMA,OAAM,SAAUC,iBAAV,GAA0F;AAAA,MAA9D;AAAEC,WAAO,GAAGrB,oBAAoB,CAACsB;AAAjC,GAA8D,uEAAF,EAAE;AAC5F,SAAO,CACH,IAAIX,oBAAJ,EADG,EAEH,IAAID,iBAAJ,EAFG,EAGH,IAAIG,kBAAJ,EAHG,EAIH,IAAIC,qBAAJ,CAA0B;AAAEO;AAAF,GAA1B,CAJG,EAKH,IAAIN,4BAAJ,CAAiC;AAAEM;AAAF,GAAjC,CALG,EAMH,IAAIpB,oBAAJ,EANG,EAOH,IAAIC,mBAAJ,EAPG,EAQH,IAAIE,mBAAJ,EARG,EASH,IAAIC,mBAAJ,EATG,EAUH,IAAIC,oBAAJ,EAVG,EAWH,IAAIC,kBAAJ,EAXG,EAYH,IAAIE,iBAAJ,EAZG,EAaH,IAAIG,oBAAJ,EAbG,EAcH,IAAIK,mBAAJ,EAdG,EAeH,IAAIC,wBAAJ,EAfG,EAgBH,IAAIC,kBAAJ,EAhBG,EAiBH,IAAIX,mBAAJ,EAjBG,EAkBH,IAAIQ,mBAAJ,CAAwB;AAAEK;AAAF,GAAxB,CAlBG,EAmBH,IAAIlB,mBAAJ,CAAwB;AAAEkB;AAAF,GAAxB,CAnBG,CAAP;AAqBH","names":["WalletAdapterNetwork","BitKeepWalletAdapter","BitpieWalletAdapter","BloctoWalletAdapter","CloverWalletAdapter","Coin98WalletAdapter","CoinhubWalletAdapter","HuobiWalletAdapter","LedgerWalletAdapter","MathWalletAdapter","GlowWalletAdapter","PhantomWalletAdapter","SafePalWalletAdapter","SlopeWalletAdapter","SolflareWalletAdapter","SolletExtensionWalletAdapter","SolletWalletAdapter","SolongWalletAdapter","TokenPocketWalletAdapter","TorusWalletAdapter","getWalletAdapters","network","Mainnet"],"sources":["/Users/bryan/solana-crowdfunding/.yarn/cache/@solana-wallet-adapter-wallets-npm-0.15.5-308f65a2d8-8df19f6fe0.zip/node_modules/@solana/wallet-adapter-wallets/src/adapters.ts"],"sourcesContent":["import { Adapter, WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { BitKeepWalletAdapter } from '@solana/wallet-adapter-bitkeep';\nimport { BitpieWalletAdapter } from '@solana/wallet-adapter-bitpie';\nimport { BloctoWalletAdapter } from '@solana/wallet-adapter-blocto';\nimport { CloverWalletAdapter } from '@solana/wallet-adapter-clover';\nimport { Coin98WalletAdapter } from '@solana/wallet-adapter-coin98';\nimport { CoinhubWalletAdapter } from '@solana/wallet-adapter-coinhub';\nimport { HuobiWalletAdapter } from '@solana/wallet-adapter-huobi';\nimport { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { GlowWalletAdapter } from '@solana/wallet-adapter-glow';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SafePalWalletAdapter } from '@solana/wallet-adapter-safepal';\nimport { SlopeWalletAdapter } from '@solana/wallet-adapter-slope';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolletExtensionWalletAdapter, SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TokenPocketWalletAdapter } from '@solana/wallet-adapter-tokenpocket';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\n\nexport interface WalletsConfig {\n    network?: WalletAdapterNetwork;\n}\n\nexport function getWalletAdapters({ network = WalletAdapterNetwork.Mainnet }: WalletsConfig = {}): Adapter[] {\n    return [\n        new PhantomWalletAdapter(),\n        new GlowWalletAdapter(),\n        new SlopeWalletAdapter(),\n        new SolflareWalletAdapter({ network }),\n        new SolletExtensionWalletAdapter({ network }),\n        new BitKeepWalletAdapter(),\n        new BitpieWalletAdapter(),\n        new CloverWalletAdapter(),\n        new Coin98WalletAdapter(),\n        new CoinhubWalletAdapter(),\n        new HuobiWalletAdapter(),\n        new MathWalletAdapter(),\n        new SafePalWalletAdapter(),\n        new SolongWalletAdapter(),\n        new TokenPocketWalletAdapter(),\n        new TorusWalletAdapter(),\n        new LedgerWalletAdapter(),\n        new SolletWalletAdapter({ network }),\n        new BloctoWalletAdapter({ network }),\n    ];\n}\n"]},"metadata":{},"sourceType":"module"}